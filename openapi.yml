openapi: 3.0.0
info:
  title: WithAI API
  version: "0.0.1"
servers:
  - url: https://www.getwith.ai
paths:
  /api/plan/create:
    post:
      summary: Create Consultation Plan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsultationPlanInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsultationPlan'

  /api/plan/{planID}:
    get:
      summary: Get Consultation Plan
      parameters:
        - name: planID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsultationPlan'

    put:
      summary: Update Consultation Plan
      parameters:
        - name: planID
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsultationPlanUpdate'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsultationPlan'

    delete:
      summary: Delete Consultation Plan
      parameters:
        - name: planID
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful deletion

  /api/plans:
    get:
      summary: List Consultation Plans
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConsultationPlan'

  /api/consultation/create:
    post:
      summary: Create Consultation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsultationInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consultation'

  /api/consultation/{consultationID}:
    get:
      summary: Get Consultation
      parameters:
        - name: consultationID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consultation'

    put:
      summary: Update Consultation
      parameters:
        - name: consultationID
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsultationUpdate'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consultation'

    delete:
      summary: Delete Consultation
      parameters:
        - name: consultationID
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful deletion

  /api/consultations:
    get:
      summary: List Consultations
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Consultation'

components:
  schemas:
    ConsultationPlanInput:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        requestedInfo:
          oneOf:
            - type: string
            - type: array
              items:
                $ref: '#/components/schemas/InfoItem'
        expertAdvice:
          oneOf:
            - type: string
            - type: array
              items:
                $ref: '#/components/schemas/AdviceItem'
      required:
        - name
        - description
        - requestedInfo
        - expertAdvice

    ConsultationPlanUpdate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        requestedInfo:
          type: array
          items:
            $ref: '#/components/schemas/InfoItem'
        expertAdvice:
          type: array
          items:
            $ref: '#/components/schemas/AdviceItem'

    ConsultationPlan:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        expertID:
          type: string
        requestedInfo:
          type: array
          items:
            $ref: '#/components/schemas/InfoItem'
        expertAdvice:
          type: array
          items:
            $ref: '#/components/schemas/AdviceItem'
      required:
        - id
        - name
        - description
        - expertID
        - requestedInfo
        - expertAdvice

    InfoItem:
      type: object
      properties:
        description:
          type: string
      required:
        - description

    AdviceItem:
      type: object
      properties:
        description:
          type: string
      required:
        - description

    ConsultationInput:
      type: object
      properties:
        planID:
          type: string
        context:
          type: string
      required:
        - planID

    ConsultationUpdate:
      type: object
      properties:
        context:
          type: string

    Consultation:
      type: object
      properties:
        id:
          type: string
        planID:
          type: string
        context:
          type: string
      required:
        - id
        - planID